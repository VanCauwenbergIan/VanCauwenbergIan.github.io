/*------------------------------------*\
#FONTS
\*------------------------------------*/

/*------------------------------------*\
#Variables
\*------------------------------------*/

:root {
  /* typography */
  --global-root-font-size: 15;

  /* colors */
  --global-color-alpha-light: #9acb95;
  --global-color-alpha: #82c37b;
  --global-color-dark: #62b958;

  --global-color-neutral-xxxx-light: #f0f0f7;
  --global-color-neutral-xxx-light: #ebebf2;
  --global-color-neutral-xx-light: #d7dae2;
  --global-color-neutral-x-light: #bcbccb;
  --global-color-neutral-light: #a5a4bf;
  --global-color-neutral: #808495;
  --global-color-neutral-dark: #4d4f5c;
  --global-color-neutral-x-dark: #43425d;
  --global-color-neutral-xx-dark: #3b3b53;

  --global-color-background--mobile: var(--global-color-alpha-light);
  --global-color-background: var(--global-color-neutral-xxxx-light);

  /* Shadows */
  --global-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.025), 0 2px 6px rgba(0, 0, 0, 0.05);
  --global-box-shadow-lg: 0 0 0 1px rgba(0, 0, 0, 0.025), 0 2px 10px rgba(0, 0, 0, 0.1);

  --global-input-shadow: 0 2px 3px rgba(0, 0, 0, 0.05);
  --global-input-focus-shadow: 0 0 5px var(--global-color-alpha-light);

  /* radius */
  --global-borderRadius: calc(4rem / var(--global-root-font-size));

  /* Whitespace */
  /* 
        global font-size = 15px
        baseline = 5px        
        15px = 1rem
        5px = 1rem/3
        This would equal to 0.3333333...rem but let the browser do the math
    */
  --global-baseline: calc(4rem / 7);
  --global-whitespace-xxs: var(--global-baseline); /* = 5px */
  --global-whitespace-xs: calc(var(--global-baseline) * 2); /* = 10px */
  --global-whitespace-sm: calc(var(--global-baseline) * 3); /* = 15px */
  --global-whitespace-md: calc(var(--global-baseline) * 4); /* = 20px */
  --global-whitespace-lg: calc(var(--global-baseline) * 5); /* = 25px */
  --global-whitespace-xl: calc(var(--global-baseline) * 6); /* = 30px */

  /* transitions */
  --global-transition-alpha: 0.2s;
  --global-transition-beta: 1s;

  --pi: 3.14159265359;
}

/*------------------------------------*\
#GENERIC
\*------------------------------------*/

/*
    Generic: Page
    ---
    Global page styles + universal box-sizing:
*/

html {
  /* font-size: 14px; */
  font-size: 100%; /* = 14px in case of 16px default font-size */
  line-height: 1.6666667em; /* = 25px */
  font-family: 'Source Sans Pro', Helvetica, arial, sans-serif;
  color: var(--global-color-neutral-dark);
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--global-color-background);
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

::-moz-selection {
  background: var(--global-color-alpha);
  color: white;
  text-shadow: none;
}

::selection {
  background: var(--global-color-alpha);
  color: white;
  text-shadow: none;
}

/*------------------------------------*\
#Elements
\*------------------------------------*/

/*
Elements: Images
---
Default markup for images to make them responsive
*/

img {
  max-width: 100%;
  vertical-align: top;
}

/*
    Elements: typography
    ---
    Default markup for typographic elements
*/

h1,
h2,
h3 {
  font-weight: 700;
}

h1 {
  /* font-size: 36px; */
  font-size: 2.4rem;
  line-height: calc(var(--global-baseline) * 8);
  margin: 0 0 var(--global-whitespace-md);
}

h2 {
  /* font-size: 28px; */
  /* font-size: 1.8666666667rem; */
  font-size: calc(28rem / var(--global-root-font-size));
  font-weight: normal;
  line-height: calc(var(--global-baseline) * 8);
  margin: 0 0 var(--global-whitespace-lg);
}

h3 {
  /* font-size: 18px; */
  font-size: 1.2rem;
  line-height: calc(var(--global-baseline) * 6);
  margin: 0 0 var(--global-whitespace-md);
}

h4,
h5,
h6 {
  /* font-size: 15px; */
  font-size: 1rem;
  font-weight: 600;
  line-height: calc(var(--global-baseline) * 5);
  margin: 0 0 var(--global-whitespace-md);
}

p,
ol,
ul,
dl,
table,
address,
figure {
  margin: 0 0 var(--global-whitespace-md);
}

ul,
ol {
  padding-left: 24px;
}

li ul,
li ol {
  margin-bottom: 0;
}

blockquote {
  font-style: normal;
  font-size: 23px;
  line-height: calc(var(--global-baseline) * 5);
  margin: 0 0 var(--global-whitespace-md);
}

blockquote * {
  font-size: inherit;
  line-height: inherit;
}

figcaption {
  font-weight: 400;
  font-size: 12px;
  line-height: 16px;
  margin-top: 8px;
}

hr {
  border: 0;
  height: 1px;
  background: LightGrey;
  margin: 0 0 var(--global-whitespace-md);
}

a {
  transition: all var(--global-transition-alpha);
  color: var(--global-color-beta);
  outline-color: var(--global-color-beta);
  outline-width: medium;
  outline-offset: 2px;
}

a:visited,
a:active {
  color: var(--global-color-beta);
}

a:hover,
a:focus {
  color: var(--global-color-alpha);
}

label,
input {
  display: block;
}

select {
  width: 100%;
}

input::placeholder {
  color: var(--global-color-neutral-light);
}

/*------------------------------------*\
#OBJECTS
\*------------------------------------*/

/*
    Objects: Row
    ---
    Creates a horizontal row that stretches the viewport and adds padding around children
*/

.o-row {
  position: relative;
  padding: var(--global-whitespace-lg) var(--global-whitespace-lg) var(--global-baseline);
}

/*
    Objects: Container
    ---
    Creates a horizontal container that sets de global max-width
*/

.o-container {
  margin-left: auto;
  margin-right: auto;
  max-width: 78em; /* 78 * 15px = 1170 */
  width: 100%;
}

/*
    Objects: List
    ---
    Small reusable object to remove default list styling from lists
*/

.o-list {
  list-style: none;
  padding: 0;
}

/*
    Object: Button reset
    ---
    Small button reset object
*/

.o-button-reset {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;

  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;

  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: normal;

  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;

  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;
}

/*
    Object: Hide accessible
    ---
    Accessibly hide any element
*/

.o-hide-accessible {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/*------------------------------------*\
#COMPONENTS
\*------------------------------------*/

/*
    Component: Logo
    ---
    Website main logo
*/

.c-logo {
  height: 64px;
  color: var(--global-color-neutral-xxxx-light);
  font-size: 14px;
}

/*
    Component: App
    ---
    Global app component
*/

.c-app {
  min-height: 100vh;
}

.c-app__logo {
  display: flex;
  padding-left: 24px;
  background-color: var(--global-color-background--mobile);
}

.c-logo {
  color: var(--global-color-neutral-xxxx-light);
  font-weight: 500;
}

.c-app__topbar {
}

.c-app__main {
}

/*
    Component: Dashboard
    ---
    Dashboard component with CSS grid
*/

.c-pokemondata {
  height: 100%;
  display: grid;
  grid-template-columns: 24px 1fr 24px;
  grid-template-rows: auto;
}

.c-pokemondata__item {
}

/* we want a background for the entire width of the page behind our header and image on mobile */
.c-pokemondata__header {
  grid-column: span 3;
  place-items: center;

  display: grid;
  place-items: center;

  background-color: var(--global-color-background--mobile);
}

.c-pokemondata__image {
  grid-column: span 3;

  display: grid;
  place-items: center;

  background-color: var(--global-color-background--mobile);
}

.c-pokemondata__description {
  grid-column: 2;
}

.c-pokemondata__effectiveness {
  grid-column: 2;
}

.c-pokemondata__stats {
  grid-column: 2;
}

.c-pokemondata__abilities {
  grid-column: 2;
}

.c-pokemondata_movelist {
  grid-column: 2;
}

.c-pokemondata_evolutions {
  grid-column: 2;
}

@media screen and (min-width: 56em) {
  .c-app {
    padding: 16px 32px 32px 32px;
  }

  .c-app__logo {
    padding: 0;
    background-color: var(--global-color-background);
  }

  .c-logo {
    font-size: 20px;
    color: var(--global-color-neutral-x-dark);
  }

  .c-pokemondata {
    grid-template-columns: repeat(2, 1fr);
    column-gap: 48px;
  }

  .c-pokemondata__header {
    display: block;
    grid-column: 1;
    grid-row: 1;

    background-color: var(--global-color-background);
  }

  .c-pokemondata__image {
    display: block;
    grid-column: 2;
    grid-row: span 3;

    background-color: var(--global-color-background);
  }

  .c-pokemondata__description {
    grid-column: 1;
    grid-row: 2;
  }

  .c-pokemondata__effectiveness {
    grid-column: 1;
    grid-row: 3;
  }

  .c-pokemondata__stats {
    grid-column: 1;
    grid-row: 4;
  }

  .c-pokemondata__abilities {
    grid-column: 1;
    grid-row: 5;
  }

  .c-pokemondata_movelist {
    grid-column: 2;
    grid-row: 5;
  }

  .c-pokemondata_evolutions {
    grid-column: 2;
    grid-row: 4;
  }
}

@media screen and (min-width: 80em) {
  .c-app {
    padding: 32px 64px 64px 64px;
  }

  .c-pokemondata {
    grid-template-columns: repeat(3, 1fr);
  }

  .c-pokemondata__header {
    grid-column: 1;
    grid-row: 1;
  }

  .c-pokemondata__image {
    grid-column: 2;
    grid-row: span 3;
  }

  .c-pokemondata__description {
    grid-column: 1;
    grid-row: 2;
  }

  .c-pokemondata__effectiveness {
    grid-column: 1;
    grid-row: 3;
  }

  .c-pokemondata__stats {
    grid-column: 1;
    grid-row: 4;
  }

  .c-pokemondata__abilities {
    grid-column: 3;
    grid-row: 1 / 3;
  }

  .c-pokemondata_movelist {
    grid-column: 3;
    grid-row: 3 / span 2;
  }

  .c-pokemondata_evolutions {
    grid-column: 2;
    grid-row: 4;
  }
}

/*
    Component: Card
*/

.c-card {
  width: 100%;
  height: 100%;
}

.c-card__title {
  margin-bottom: 0;
  font-size: 14px;

  color: var(--global-color-alpha);
}

.c-card__body {
  padding: var(--global-whitespace-md);
}

.c-card__header {
  padding-bottom: 0;
}

.c-card__header > *:last-child,
.c-card__body > *:last-child {
  margin-bottom: 0;
}

@media screen and (min-width: 56em) {
  .c-card__title {
    font-size: 16px;
  }
}

/*
    Component: Input
    ---
    Class to put on all input="text" like form inputs
*/

.c-input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 100%;
  border: 1px solid var(--global-color-neutral-xx-light);
  border-radius: var(--global-borderRadius);
  background-color: #fff;
  color: var(--global-color-neutral-xxxx-dark);
  font-family: inherit;
  /* font-size: 13px;
    line-height: 20px;
    padding: 4px 10px; */
  font-size: 0.8666666667rem;
  line-height: calc(var(--global-baseline) * 4);
  padding: calc(var(--global-whitespace-xxs) - 1px) var(--global-whitespace-xs);
  outline: none;
  box-shadow: var(--inset-shadow);
  transition: border var(--global-transition-alpha);
  box-shadow: var(--global-input-shadow);
}

.c-input:hover {
  border-color: var(--global-color-neutral-x-light);
}

.c-input:focus,
.c-input:active {
  border-color: var(--global-color-alpha-light);
  box-shadow: var(--global-input-focus-shadow);
}

/*------------------------------------*\
#UTILITIES
\*------------------------------------*/

/*
    Utilities: color
    ---
    Utility classes to put specific colors onto elements
*/

.u-color-neutral {
  color: var(--global-color-neutral);
}

.u-color-neutral-dark {
  color: var(--global-color-neutral-dark);
}

/*
    Utilities: spacing
    ---
    Utility classes to put specific margins and paddings onto elements
*/

.u-pt-clear {
  padding-top: 0 !important;
}

.u-mb-clear {
  margin-bottom: 0 !important;
}

.u-mb-xxs {
  margin-bottom: var(--global-whitespace-xxs) !important;
}

.u-mb-xs {
  margin-bottom: var(--global-whitespace-xs) !important;
}

.u-mb-sm {
  margin-bottom: var(--global-whitespace-sm) !important;
}

.u-mb-md {
  margin-bottom: var(--global-whitespace-md) !important;
}

.u-mb-lg {
  margin-bottom: var(--global-whitespace-lg) !important;
}

.u-mb-xl {
  margin-bottom: var(--global-whitespace-xl) !important;
}

/*
    Utilities: max-width
    ---
    Utility classes to put specific max widths onto elements
*/

.u-max-width-xs {
  max-width: 27em !important;
}

.u-max-width-sm {
  max-width: 39em !important;
}

.u-max-width-md {
  max-width: 50em !important;
}

.u-max-width-lg {
  max-width: 63.5em !important;
}

.u-max-width-none {
  max-width: none !important;
}

/*
    Utilities: align
    ---
    Utility classes align text or components
*/

.u-align-text-center {
  text-align: center;
}

.u-align-center {
  margin: 0 auto;
}

/*
    Utilities: text
    Utility classes to create smaller or bigger test
*/

.u-text-xs {
  font-size: calc(11rem / var(--global-root-font-size));
}

.u-text-sm {
  font-size: calc(13rem / var(--global-root-font-size));
  line-height: calc(var(--global-baseline) * 4);
}

/*
    Utilities: span
    Utility classes to span grid items across the x and y axis
*/

/* x: horizontal */

@media (min-width: 62em) {
  .u-x-span-3-bp3 {
  }

  .u-x-span-4-bp3 {
  }

  .u-x-span-6-bp3 {
  }

  .u-x-span-8-bp3 {
  }

  .u-x-span-9-bp3 {
  }
}

/* y: vertical */

@media (min-width: 62em) {
  .u-y-span-2-bp3 {
  }
}

/*------------------------------------*\
#MEDIA
\*------------------------------------*/

/*
    Media Queries
    ---
    EXAMPLE Media Queries for Responsive Design.
    These examples override the primary ('mobile first') styles.
    USE THEM INLINE!
*/

/* Extra small devices (portrait phones, less than 576px)
No media query since this is the default in mobile first design
*/

/* Small devices (landscape phones, 576px and up)
@media (min-width: 576px) {}
*/

/* Medium devices (tablets, 768px and up)
@media (min-width: 768px) {}
*/

/* Large devices (landscape tablets, desktops, 62em and up)
@media (min-width: 62em) {}
*/

/* Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {}
*/

/*
    Print styles.
    ---
    Inlined to avoid the additional HTTP request:
    http://www.phpied.com/delay-loading-your-print-css/
*/

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
        http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: ' (' attr(href) ')';
  }
  abbr[title]:after {
    content: ' (' attr(title) ')';
  }
  /*
    * Don't show links that are fragment identifiers,
    * or use the `javascript:` pseudo protocol
    */
  a[href^='#']:after,
  a[href^='javascript:']:after {
    content: '';
  }
  pre {
    white-space: pre-wrap !important;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  /*
    * Printing Tables:
    * http://css-discuss.incutio.com/wiki/Printing_Tables
    */
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
